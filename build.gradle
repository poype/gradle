plugins {
    id 'java'
}

group 'com.poype'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

// 配置阶段开始前的监听回调
this.beforeEvaluate {
    println 'configuration start.....'
}

// 配置阶段完成后的监听回调
this.afterEvaluate {
    println 'configuration finish.....'
}

// gradle执行完毕后的回调监听, 任何task(clean,build)都会执行
this.gradle.buildFinished {
    println 'execute finish....'
}

// 等同于beforeEvaluate
this.gradle.beforeProject {
    println 'Poype gradle.beforeProject ...'
}

// 等同于afterEvaluate
this.gradle.afterProject {
    println 'Poype gradle.afterProject ...'
}

def getProjects() {
    println '--------------------'
    println 'Poype Project'
    println '--------------------'
    this.getAllprojects().eachWithIndex { Project project, int index ->
        if (index == 0) {
            println "Root project ':${project.name}'"
        } else {
            println "+=== project ':${project.name}'"
        }
    }
}
this.getProjects()  // 调用方法, 该方法会在configuration阶段被执行

// 直接操作子project
this.project('sub1') {Project project ->
    println "Test Project ${project.name}  ............"
}

// 在一个地方对所有的工程进行配置
allprojects {

}

// 一次性配置所有的子工程
subprojects {

}